@using ESchool.Helpers
@model ESchool.Models.EduMaterial.PdfMaterialViewModel
@{
    ViewData["Title"] = "Загрузить документ";
}
<h1>Учебные материалы</h1>

<h4>Добавить документы </h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data" asp-controller="PdfMaterials" asp-action="AddNewPdf">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label">Титул</label>
                <input asp-for="Title" class="form-control" />

                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="File" class="control-label">Файл</label>
                <input type="file" asp-for="File" class="form-control" value="Выбирайте файлы" />
                <span asp-validation-for="File" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Загрузить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Student))
{
    <div>
        <a asp-controller="Home" asp-action="MyCourse">Назад</a>
    </div>
}
@if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Teacher))
{
    <a asp-controller="Home" asp-action="CourseControl">Назад</a>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
